#! /usr/bin/env bash
#
#   Copyright (c) 2018 Nat! - Mulle kybernetiK
#   All rights reserved.
#
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions are met:
#
#   Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
#   Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
#   Neither the name of Mulle kybernetiK nor the names of its contributors
#   may be used to endorse or promote products derived from this software
#   without specific prior written permission.
#
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#   POSSIBILITY OF SUCH DAMAGE.
#

[ "${TRACE}" = "YES" ] && set -x && : "$0" "$@"


add()
{
   local marks="$1"
   local name="$2"

   local upcaseid

   local url
   local branch
   local suffix

   upcaseid="`tr 'a-z-' 'A-Z_' <<< "${name}"`"
   branch="\${${upcaseid}_BRANCH:-\${MULLE_C_BRANCH:-${OPTION_BRANCH}}}"

   #
   # what is this madness ?
   # you can replace the various repositories with environment variables
   # so you can substitute your own repository, instead of the offical
   # and chose a different branch.
   #
   # see the effect with:
   #    MULLE_C_BRANCH="experimental" \
   #    MULLE_VARARG_BRANCH="1.2.0" \
   #    MULLE_UTF_URL="https://www.foo.com" \
   #        mulle-sourcetree -e -N list --output-eval --output-full
   #
   # since mulle-sourcetree matches on the evaled name, this can be
   # important to share two slightly different worded urls (if both
   # URLs use this scheme)
   #
   case "${OPTION_URL_TYPE}" in
      "mulle")
         url="\${${upcaseid}_URL:-https://www.mulle-kybernetik.com/software/git/${name}/tarball/${branch}}"
      ;;

      "github")
         url="\${${upcaseid}_URL:-https://github.com/mulle-c/${name}/archive/${branch}.tar.gz}"
      ;;

      *)
         fail "unknown url type \"${OPTION_URL_TYPE}\""
      ;;
   esac

   exekutor mulle-sourcetree -e --no-defer add --nodetype tar \
                                               --marks "${marks}" \
                                               "${url}"
}


#
# the fancy options are for manual use
#
main()
{
   local OPTION_URL_TYPE="github"
   local OPTION_BRANCH="release"

   while [ $# -ne 0 ]
   do
      if options_technical_flags "$1"
      then
         shift
         continue
      fi

      case "$1" in
         -m|--mulle-url)
            OPTION_URL_TYPE="mulle"
         ;;

         -g|--github-url)
            OPTION_URL_TYPE="github"
         ;;

         -b|--branch)
            [ $# -eq 1 ] && log_error "missing argument to \"$1\"" && exit 1
            shift

            OPTION_BRANCH="$1"
         ;;

         -*)
            log_error "unknown option \"$1\""
            exit 1
         ;;

         *)
            break
         ;;
      esac

      shift
   done

   options_setup_trace "${MULLE_TRACE}"

   log_info "Adding mulle-c libraries to sourcetree. That takes a few seconds"

   export MULLE_BASHFUNCTIONS_LIBEXEC_DIR

   #
   # we specify most no-recurse, since we know they have no dependencies
   # thread does have a dependency though
   # and mulle-c11 is special, as it's header only
   #
   add no-recurse,no-cmake-include,no-link mulle-c11 &&
   add no-cmake-include                    mulle-thread &&
   add no-recurse,no-cmake-include         mulle-allocator &&
   add no-recurse,no-cmake-include         mulle-aba &&
   add no-recurse,no-cmake-include         mulle-concurrent &&
   add no-recurse,no-cmake-include         mulle-buffer &&
   add no-recurse,no-cmake-include         mulle-sprintf &&
   add no-recurse,no-cmake-include         mulle-container &&
   add no-recurse,no-cmake-include         mulle-utf &&
   add no-recurse,no-cmake-include         mulle-vararg
}


_init()
{
   if [ -z "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}" ]
   then
      MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env "libexec-dir" 2> /dev/null`"
      [ -z "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}" ] && \
         echo "mulle-bashfunctions-env not installed" >&2 && \
         exit 1
   fi

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" "minimal" || exit 1
}

_init "$@"
main "$@"
